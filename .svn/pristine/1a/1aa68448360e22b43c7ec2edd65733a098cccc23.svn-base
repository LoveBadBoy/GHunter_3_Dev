//
//  ghunterUserInfoViewController.m
//  ghunter
//
//  Created by chensonglu on 14-3-11.
//  Copyright (c) 2014年 ghunter. All rights reserved.
//我的个人资料

#import "ghunterUserInfoViewController.h"
#import "ghunterModifyPasswordViewController.h"
#import "ghunterModifySkillViewController.h"
@interface ghunterUserInfoViewController ()





@property (strong, nonatomic) IBOutlet UILabel *zhiyestr;
@property (weak, nonatomic) IBOutlet UIScrollView *scrollView;
@property (strong, nonatomic) IBOutlet UIView *userInfo;

@property (strong, nonatomic) IBOutlet UIView *addrebg;

@property (weak, nonatomic) IBOutlet UIView *avatarBG;
@property (weak, nonatomic) IBOutlet UIImageView *userIcon;
@property (weak, nonatomic) IBOutlet UIView *userInfoBG;
@property (weak, nonatomic) IBOutlet UILabel *username;
@property (weak, nonatomic) IBOutlet UILabel *gender;
@property (weak, nonatomic) IBOutlet UILabel *age;
@property(nonatomic,retain)NSString *ageStr;
@property (weak, nonatomic) IBOutlet UILabel *signature;
@property (weak, nonatomic) IBOutlet UILabel *school;
@property(nonatomic,retain)NSString *school_id;
@property (weak, nonatomic) IBOutlet UIView *levelBG;
@property (weak, nonatomic) IBOutlet UILabel *level;
@property (weak, nonatomic) IBOutlet UILabel *identity;
@property(nonatomic,retain)UIActionSheet *actionSheet;
@property(nonatomic,retain)UIPickerView *pickerView;
@property(nonatomic,retain)NSArray *one2ten;
@property(nonatomic,retain)NSMutableArray *yearArray;
@property(nonatomic,retain)NSMutableArray *monthArray;
@property(nonatomic,retain)NSMutableArray *dayArray;
// 显示手机号
@property (weak, nonatomic) IBOutlet UILabel *phoneLabel;

@property (strong, nonatomic) IBOutlet UILabel *skillnumber;

@property (strong, nonatomic) IBOutlet UILabel *addres;
@property (strong, nonatomic) IBOutlet UIView *bg;




@end

@implementation ghunterUserInfoViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (IBAction)address:(UIButton *)sender {

    [self configureResultLabel];
    
    [self configureCustomPikerView];
}
- (void)configureResultLabel {
    resultLabel                 = [[UILabel alloc]init];
    resultLabel.backgroundColor          = [UIColor clearColor];
    resultLabel.frame                    = CGRectMake(180, 47, 100, 44);
    resultLabel.textColor                = [UIColor clearColor];
    resultLabel.textAlignment            = NSTextAlignmentCenter;
//
    ProvinceModel *provinceModel         = self.citiesData[0];
    resultLabel.text         = [NSString stringWithFormat:@"%@ %@",provinceModel.provinceName,provinceModel.provinceCities[0]];

    [self.view addSubview:resultLabel];
    self.resultLabel = resultLabel;
}
- (void)configureCustomPikerView {

    customPikerView  = [[GWLCustomPikerView alloc]init];
    customPikerView.frame= CGRectMake(0, mainScreenheight-200, mainScreenWidth, 200);
    customPikerView.dataSource           = self;
    customPikerView.delegate             = self;
    customPikerView.titleLabelColor      = [UIColor redColor];
    customPikerView.titleButtonText      = @"确定";
    
    customPikerView.titleButtonTextColor = [UIColor redColor];
    customPikerView.indicatorColor       = [UIColor whiteColor];
    [self.view addSubview:customPikerView];
    self.customPikerView  = customPikerView;
//    _addres.text = resultLabel.text;
}

#pragma mark - GWLCustomPikerViewDataSource
- (NSInteger)numberOfComponentsInCustomPikerView:(GWLCustomPikerView *)customPickerView {
    return 2;
}

- (NSInteger)customPickerView:(GWLCustomPikerView *)customPickerView numberOfRowsInComponent:(NSInteger)component {
    if (component == 0) {
        return self.citiesData.count;
    }else {
        ProvinceModel *provinceModel         = self.citiesData[_selectedProvince];
        return provinceModel.provinceCities.count;
    }
}

- (NSString *)customPickerView:(GWLCustomPikerView *)customPickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component {
    if (component == 0) {
        ProvinceModel *provinceModel         = self.citiesData[row];
        return provinceModel.provinceName;
    }else {
        ProvinceModel *provinceModel         = self.citiesData[_selectedProvince];
        return provinceModel.provinceCities[row];
    }
}

#pragma mark - events
- (void)reloadButtonDidClick {
    [self.customPikerView reloadAllComponents];
}

#pragma mark - GWLCustomPikerViewDelegate
- (void)customPikerViewDidSelectedComponent:(NSInteger)component row:(NSInteger)row {
    if (component == 0) {
        _selectedProvince                    = row;
        [self.customPikerView reloadComponent:1];
        _selectedCity                        = 0;
    }else if (component == 1) {
        _selectedCity                        = row;
    }
    
    ProvinceModel *provinceModel         = self.citiesData[_selectedProvince];
    self.addressssss.text                = [NSString stringWithFormat:@"%@ %@",provinceModel.provinceName,provinceModel.provinceCities[_selectedCity]];
}

- (void)customPikerViewCompleteSelectedRows:(NSArray *)rows {
    ProvinceModel *provinceModel = self.citiesData[[rows[0] integerValue]];
    self.resultLabel.text = [NSString stringWithFormat:@"%@ %@",provinceModel.provinceName,provinceModel.provinceCities[[rows[1] integerValue]]];
    NSString  *a = self.resultLabel.text;
//    字符串截取到第n位  （substringToIndex: n）(第n 位不算再内)
    NSString *province = [a substringToIndex:2];
//    字符串从第n 位开始截取,直到最后 （substringFromIndex:n）（包括第 n 位）
    NSString *city = [a substringFromIndex:3];
    
    NSMutableDictionary *dic = [[NSMutableDictionary alloc] init];
    [dic setObject:province forKey:@"province"];
    [dic setObject:city forKey:@"city"];
    [self didModifyProfile:dic];

    [reloadButton removeFromSuperview];
    [resultLabel removeFromSuperview];
    [customPikerView removeFromSuperview];
}


#pragma mark - layz loading
- (NSArray *)citiesData {
    if (!_citiesData) {
        NSString *path                       = [[NSBundle mainBundle] pathForResource:@"Cities" ofType:@"plist"];
        NSArray *citiesArray                 = [NSArray arrayWithContentsOfFile:path];
        NSMutableArray *provinceModelArrayM  = [NSMutableArray array];
        for (NSDictionary *dict in citiesArray) {
            ProvinceModel *provinceModel         = [ProvinceModel provinceModelWithDict:dict];
            [provinceModelArrayM addObject:provinceModel];
        }
        _citiesData                          = provinceModelArrayM;
    }
    return _citiesData;
}

- (BOOL)prefersStatusBarHidden {
    return YES;
}

// 修改行业，方向和职业
- (void)tongzhi:(NSNotification *)text{
    self.zhiyestr.text = text.userInfo[@"job"];
    
    NSMutableDictionary *dic = [[NSMutableDictionary alloc] init];
    [dic setObject:text.userInfo[@"industry"] forKey:@"industry"];
    [dic setObject:text.userInfo[@"job"] forKey:@"job"];
    [dic setObject:text.userInfo[@"direction"] forKey:@"direction"];
    [self didModifyProfile:dic];
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    //注册通知
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(tongzhi:) name:@"tongzhi" object:nil];
     _bg.backgroundColor = Nav_backgroud;
    // Do any additional setup after loading the view from its nib.
    self.yearArray = [[NSMutableArray alloc] init];
    self.monthArray = [[NSMutableArray alloc] init];
    self.dayArray = [[NSMutableArray alloc] init];
    _one2ten = [[NSArray alloc] initWithObjects:@"01",@"02",@"03",@"04",@"05",@"06",@"07",@"08",@"09", nil];
    for (NSUInteger i = 1950; i<= 2050; i++) {
        [self.yearArray addObject:[NSString stringWithFormat:@"%zd",i]];
    }
    [self.monthArray addObjectsFromArray:_one2ten];
    for (NSUInteger i = 10; i <= 12;i++) {
        [self.monthArray addObject:[NSString stringWithFormat:@"%zd",i]];
    }
    [self.dayArray addObjectsFromArray:_one2ten];
    for (NSUInteger i = 10; i <= 31; i++) {
        [self.dayArray addObject:[NSString stringWithFormat:@"%zd",i]];
    }
    
    self.userIcon.clipsToBounds = YES;
    self.userIcon.layer.cornerRadius = 25;
    
    self.zhiyestr.text = [self.user objectForKey:@"job"];
    
    NSArray * array = [self.user objectForKey:@"tags"];
    if (array ==nil||array.count==0) {
    }else{
    NSString *strtag = [NSString stringWithFormat:@"%@等%lu项技能",[array objectAtIndex:0],(unsigned long)array.count];
    _skillnumber.text =strtag;
    }
    NSString * addstr = [NSString stringWithFormat:@"%@ %@", [self.user objectForKey:@"province"],[self.user objectForKey:@"city"]];
    _addres.text = addstr;
    
    self.userIcon.userInteractionEnabled = YES;
    [self.userIcon sd_setImageWithURL:[NSURL URLWithString:[self.user objectForKey:@"large_avatar"]] placeholderImage:[UIImage imageNamed:@"avatar"]];
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(iconTaped:)];
    [self.userIcon addGestureRecognizer:tap];
    [self.username setText:[self.user objectForKey:@"username"]];
    [self.age setText:[self.user objectForKey:@"age"]];
    self.phoneLabel.text = [self.user objectForKey:@"phone"];
    if([[self.user objectForKey:@"sex"] isEqualToString:@"0"]){
        [self.gender setText:@"女"];
    }else{
        [self.gender setText:@"男"];
    }
    [self.signature setText:[self.user objectForKey:@"description"]];
    [self.school setText:[self.user objectForKey:@"university_name"]];
    self.level.backgroundColor = Nav_backgroud;
    self.level.layer.cornerRadius = 2.0;
    [self.level setText:[NSString stringWithFormat:@"lv%@",[self.user objectForKey:@"level"]]];
    if([[self.user objectForKey:@"is_identity"] isEqualToString:@"0"]) {
        self.identity.backgroundColor = backgroud_Bg;
        self.identity.text = @"实名";
        self.identity.layer.cornerRadius = 2.0;
    } else if ([[self.user objectForKey:@"is_identity"] isEqualToString:@"1"]) {
        self.identity.backgroundColor = RGBCOLOR(145, 137, 225);
        self.identity.textColor = [UIColor whiteColor];
        self.identity.text = @"实名";
        self.identity.layer.cornerRadius = 2.0;
    }
    CGRect userinfoFrame = self.userInfo.frame;
    userinfoFrame.size.width = mainScreenWidth;
    self.userInfo.frame = userinfoFrame;
    self.scrollView.frame = CGRectMake(0, 64, mainScreenWidth, mainScreenheight - 20 - 44);
    self.scrollView.contentSize = CGSizeMake(mainScreenWidth, self.userInfo.frame.size.height);
    self.scrollView.showsVerticalScrollIndicator = NO;
    [self.scrollView addSubview:self.userInfo];

    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"modify_name" object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(modifyName:) name:@"modify_name" object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"modify_signature" object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(modifySignature:) name:@"modify_signature" object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"change_phone" object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(changePhone:) name:@"change_phone" object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"addschool" object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(addSchoolOK:) name:@"addschool" object:nil];
    
    // 修改密码成功
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"modifyPasswdOK" object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(modifyPasswdOK:) name:@"modifyPasswdOK" object:nil];
}

- (void)viewWillAppear:(BOOL)animated {
    self.tabBarController.tabBar.hidden = YES;
    self.navigationController.navigationBarHidden = NO;
    self.navigationController.navigationBar.alpha = 0;
    [self.navigationController.view sendSubviewToBack:self.navigationController.navigationBar];
    [self.navigationController.view sendSubviewToBack:self.navigationController.navigationBar];
    [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent animated:YES];
    [[UIApplication sharedApplication] setStatusBarHidden:NO withAnimation:UIStatusBarAnimationFade];
}

- (void)dealloc {
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"modify_name" object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"modify_signature" object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"change_phone" object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"addschool" object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"modifyPasswdOK" object:nil];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - ASIHttpRequest

-(void)requestFinished:(ASIHTTPRequest *)request
{
    int responseCode=[request responseStatusCode];
    NSError *error;
    NSData *responseData = [request responseData];
    NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseData options:NSJSONReadingMutableLeaves error:&error];
    NSString *error_number = [dic objectForKey:ERROR];
    if ([[request.userInfo objectForKey:REQUEST_TYPE] isEqual: REQUEST_FOR_MODIFY_PROFILE]){
        if(responseCode==200 && [error_number integerValue] == 0)
        {
            // 如果是修改头像
            if ( [dic objectForKey:@"user"] ) {
                dic = [dic objectForKey:@"user"];
                [ghunterRequester setUserInfoWithKey:@"avatar" withValue:[dic objectForKey:@"avatar"]];
                [ghunterRequester setUserInfoWithKey:@"middle_avatar" withValue:[dic objectForKey:@"middle_avatar"]];
                [ghunterRequester setUserInfoWithKey:@"tiny_avatar" withValue:[dic objectForKey:@"tiny_avatar"]];
            }
            
            NSNotification *notification = [NSNotification notificationWithName:@"userinfo_modify" object:nil userInfo:nil];
            [[NSNotificationCenter defaultCenter] performSelectorOnMainThread:@selector(postNotification:) withObject:notification waitUntilDone:false];
            
        }else if([dic objectForKey:@"msg"]){
            [ghunterRequester wrongMsg:[dic objectForKey:@"msg"]];
        }else{
            [ghunterRequester noMsg];
        }
    }
}

-(void)requestFailed:(ASIHTTPRequest *)request
{
    [ghunterRequester performSelectorOnMainThread:@selector(showTip:) withObject:HTTPREQUEST_ERROR waitUntilDone:false];
}

#pragma mark - Custom Methods

- (IBAction)back:(id)sender {
    [self.navigationController popViewControllerAnimated:YES];
}

// 修改头像
- (IBAction)avatarChange:(id)sender {
    pictureAlert = [[SIAlertView alloc] initWithTitle:nil andMessage:nil];
    NSArray *nibs = [[NSBundle mainBundle] loadNibNamed:@"pictureView" owner:self options:nil];
    UIView *taskFilter = [[UIView alloc] init];
    taskFilter = [nibs objectAtIndex:0];
    CGRect taskfilterFrame = taskFilter.frame;
    pictureAlert.containerFrame = CGRectMake((mainScreenWidth - taskfilterFrame.size.width) / 2.0, (mainScreenheight - taskfilterFrame.size.height - 10), taskfilterFrame.size.width, taskfilterFrame.size.height);
    pictureAlert.showView = taskFilter;
    UIButton *local = (UIButton *)[taskFilter viewWithTag:1];
    UIButton *camera = (UIButton *)[taskFilter viewWithTag:2];
    UIButton *cancel = (UIButton *)[taskFilter viewWithTag:3];
    [local addTarget:self action:@selector(local_pic) forControlEvents:UIControlEventTouchUpInside];
    [camera addTarget:self action:@selector(camera_pic) forControlEvents:UIControlEventTouchUpInside];
    [cancel addTarget:self action:@selector(cancel_pic) forControlEvents:UIControlEventTouchUpInside];
    pictureAlert.transitionStyle = SIAlertViewTransitionStyleSlideFromBottom;
    [pictureAlert show];
}

- (void)local_pic {
    [self cancel_pic];
    [self addPicture:0];
}

- (void)camera_pic {
    [self cancel_pic];
    [self addPicture:1];
}

- (void)cancel_pic {
    [pictureAlert dismissAnimated:YES];
}

- (void)addPicture:(NSInteger)sender {
    if(sender == 0) {
        UIImagePickerController *imgPicker = [[UIImagePickerController alloc] init];
        [imgPicker setAllowsEditing:YES];
        [imgPicker setDelegate:self];
        [imgPicker setSourceType:UIImagePickerControllerSourceTypePhotoLibrary];
        [self.navigationController presentViewController:imgPicker animated:YES completion:nil];
    } else if (sender == 1) {
        UIImagePickerController *imgPicker = [[UIImagePickerController alloc] init];
        [imgPicker setAllowsEditing:YES];
        [imgPicker setDelegate:self];
        [imgPicker setSourceType:UIImagePickerControllerSourceTypeCamera];
        [self.navigationController presentViewController:imgPicker animated:YES completion:nil];
    }
}

- (IBAction)usernameChange:(id)sender {
    ghunterModifyUserInfoViewController *modify = [[ghunterModifyUserInfoViewController alloc] init];
    modify.type = 0;
    modify.content = self.username.text;
    [self.navigationController pushViewController:modify animated:YES];
}

- (IBAction)genderChange:(id)sender {
    [ghunterRequester showTip:@"性别不可再更改"];
}

- (IBAction)birthdayChange:(id)sender {
    ageAlert = [[SIAlertView alloc] initWithTitle:nil andMessage:nil];
    UIView *bg = [[UIView alloc] initWithFrame:CGRectMake(0, 0, mainScreenWidth - 20, 200)];
    CGRect bgFrame = bg.frame;
    UIView *bgImg = [[UIView alloc] initWithFrame:bgFrame];
    bgImg.backgroundColor = [UIColor whiteColor];
    bgImg.alpha = 0.7;
    bgImg.clipsToBounds = YES;
    bgImg.layer.cornerRadius = Radius;
    _pickerView= [[UIPickerView alloc] initWithFrame:CGRectMake(0, 40, mainScreenWidth - 20, 160)];
    _pickerView.delegate = self;
    _pickerView.dataSource = self;
    _pickerView.showsSelectionIndicator = YES;
    [_pickerView selectRow:40 inComponent:0 animated:YES];
    [_pickerView selectRow:5 inComponent:1 animated:YES];
    [_pickerView selectRow:5 inComponent:2 animated:YES];
    UIButton *leftButton = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, 50, 40)];
    [leftButton setTitle:@"取消" forState:UIControlStateNormal];
    [leftButton addTarget:self action:@selector(cancel) forControlEvents:UIControlEventTouchUpInside];
    [leftButton setTitleColor:[UIColor colorWithRed:234/255.0 green:85/255.0 blue:20/255.0 alpha:1.0] forState:UIControlStateNormal];
    UIButton *rightButton = [[UIButton alloc] initWithFrame:CGRectMake(bg.frame.size.width - 50,0 ,50 ,40)];
    [rightButton setTitle:@"确定" forState:UIControlStateNormal];
    [rightButton addTarget:self action:@selector(confirm) forControlEvents:UIControlEventTouchUpInside];
    [rightButton setTitleColor:[UIColor colorWithRed:234/255.0 green:85/255.0 blue:20/255.0 alpha:1.0] forState:UIControlStateNormal];
    UIView *line = [[UIView alloc] initWithFrame:CGRectMake(0, 40, bg.frame.size.width, 0.5)];
    [line setBackgroundColor:[UIColor colorWithRed:181/255.0 green:181/255.0 blue:181/255.0 alpha:1.0]];
    [bg addSubview:bgImg];
    [bg addSubview:leftButton];
    [bg addSubview:rightButton];
    [bg addSubview:line];
    [bg addSubview:_pickerView];
    ageAlert.containerFrame = CGRectMake((mainScreenWidth - bgFrame.size.width) / 2.0, mainScreenheight - bgFrame.size.height - 10, bgFrame.size.width, bgFrame.size.height);
    ageAlert.showView = bg;
    ageAlert.transitionStyle = SIAlertViewTransitionStyleSlideFromBottom;
    ageAlert.backgroundStyle = SIAlertViewBackgroundStyleSolid;
    [ageAlert show];
}

- (void)cancel{
    [ageAlert dismissAnimated:YES];
}

- (void)confirm{
    NSUInteger yearSelected = [_pickerView selectedRowInComponent:0];
    NSUInteger monthSelected = [_pickerView selectedRowInComponent:1];
    NSUInteger daySelected = [_pickerView selectedRowInComponent:2];
    NSString *year = [self.yearArray objectAtIndex:yearSelected];
    NSString *month = [self.monthArray objectAtIndex:monthSelected];
    NSString *day = [self.dayArray objectAtIndex:daySelected];
    NSString *birthday = [NSString stringWithFormat:@"%@-%@-%@",year,month,day];
    self.ageStr = birthday;
    NSInteger age = (NSInteger)[ghunterRequester getAge:birthday];
    [self.age setText:[NSString stringWithFormat:@"%zd",age]];
    [ageAlert dismissAnimated:YES];
    [self modifyProfile:birthday withKey:@"birthday"];
}

- (IBAction)signatureChange:(id)sender {
    ghunterModifyUserInfoViewController *modify = [[ghunterModifyUserInfoViewController alloc] init];
    modify.type = 1;
    modify.content = self.signature.text;
    [self.navigationController pushViewController:modify animated:YES];
}

- (IBAction)schollChange:(id)sender {self.zhiyestr.text = [Monitor sharedInstance].monstr;
    ghunterschoolViewController *school = [[ghunterschoolViewController alloc] init];
    [self.navigationController pushViewController:school animated:YES];
}

- (void)addSchoolOK:(NSNotification *)sender {
    NSDictionary *school = [sender object];
    [self.school setText:[school objectForKey:@"university_name"]];
    self.school_id = [school objectForKey:@"university_id"];
    [self modifyProfile:self.school_id withKey:@"university_id"];
}

// 修改密码成功
- (void)modifyPasswdOK:(NSNotification *)sender {
    [self.navigationController popViewControllerAnimated:NO];
}

- (IBAction)hunterLevel:(id)sender {
    ghunterLevelViewController *level = [[ghunterLevelViewController alloc] init];
    level.userDic = [[NSMutableDictionary alloc] initWithDictionary:self.user];
    [self.navigationController pushViewController:level animated:YES];
}

- (IBAction)hunterIdentity:(id)sender {
    ghunterIdentityViewController *identityVC = [[ghunterIdentityViewController alloc] init];
    [self.navigationController pushViewController:identityVC animated:YES];
}

// 修改手机号
- (IBAction)contactChange:(id)sender {
    ghunterModifyPhoneViewController *phone = [[ghunterModifyPhoneViewController alloc] init];
    phone.phoneNum = [self.user objectForKey:@"phone"];
    [self.navigationController pushViewController:phone animated:YES];
}

- (void)modifyName:(NSNotification *)sender{
    NSString *content = [sender object];
    [self.username setText:content];
    [self modifyProfile:content withKey:@"username"];
}

- (void)modifySignature:(NSNotification *)sender{
    NSString *content = [sender object];
    [self.signature setText:content];
    [self modifyProfile:content withKey:@"description"];
}

// 修改手机号成功
- (void)changePhone:(NSNotification *)sender{
    NSString *content = [sender object];
    [self.phoneLabel setText:content];
    [self modifyProfile:content withKey:@"phone"];
}

// 修改密码
- (IBAction)passwordChange:(id)sender {
    ghunterModifyPasswordViewController *modify = [[ghunterModifyPasswordViewController alloc]init];
    [self.navigationController pushViewController:modify animated:YES];
}

- (void)modifyProfile:(NSString *)string withKey:(NSString *)key{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc] init];
    [dic setObject:string forKey:key];
    
    [self didModifyProfile:dic];
}

// 修改成功后的回调
-(void)didModifyProfile:(NSMutableDictionary *)dict{
    [AFNetworkTool httpPostWithUrl:URL_MODIFY_PROFILE andParameters:dict success:^(NSData *data) {
        NSError *error;
        NSDictionary *json = [NSJSONSerialization JSONObjectWithData:data options:0 error:&error];
        if ( [[json objectForKey:@"error"] integerValue] == 0 ) {
            // 如果是修改头像
            if ( [json objectForKey:@"user"] ) {
                json = [json objectForKey:@"user"];
                [ghunterRequester setUserInfoWithKey:@"avatar" withValue:[json objectForKey:@"avatar"]];
                [ghunterRequester setUserInfoWithKey:@"middle_avatar" withValue:[json objectForKey:@"middle_avatar"]];
                [ghunterRequester setUserInfoWithKey:@"tiny_avatar" withValue:[json objectForKey:@"tiny_avatar"]];
            }
            
            NSNotification *notification = [NSNotification notificationWithName:@"userinfo_modify" object:nil userInfo:nil];
            [[NSNotificationCenter defaultCenter] performSelectorOnMainThread:@selector(postNotification:) withObject:notification waitUntilDone:false];
        }else{
            [ProgressHUD show:[json objectForKey:@"msg"]];
        }
    } fail:^{
        [ProgressHUD show:HTTPREQUEST_ERROR];
    }];
}

- (void)iconTaped:(UITapGestureRecognizer *)sender{
    [SJAvatarBrowser showImage:(UIImageView*)sender.view];
}

#pragma mark - UIImagePicker delegate
-(void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    UIImage *image = [info objectForKey:UIImagePickerControllerEditedImage];
    [self.userIcon setImage:image];
    [self modifyProfile:[ghunterRequester image2String:image] withKey:@"avatar"];
    [picker dismissViewControllerAnimated:YES completion:nil];
}

-(void)imagePickerControllerDidCancel:(UIImagePickerController *)picker
{
    [picker dismissViewControllerAnimated:YES completion:nil];
    return;
}

#pragma mark - UIPickerView delegate datasource
- (NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView{
    return 3;
}

// returns the # of rows in each component..
- (NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component{
    
    if(component == 0){
        return [self.yearArray count];
    }else if (component == 1){
        return [self.monthArray count];
    }else{
        NSUInteger yearSelected = [pickerView selectedRowInComponent:0];
        NSUInteger monthSelected = [pickerView selectedRowInComponent:1];
        NSUInteger year = [[self.yearArray objectAtIndex:yearSelected] integerValue];
        NSUInteger month = [[self.monthArray objectAtIndex:monthSelected] integerValue];
        if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12){
            return 31;
        }else if(month == 4 || month == 6 || month == 9 || month == 11){
            return 30;
        }else{
            if(month == 2 && IS_LEAP_YEAR(year)){
                return 29;
            }else return 28;
        }
    }
}

- (NSString *)pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component
{
    switch (component) {
        case 0:
            return [self.yearArray objectAtIndex:row];
            break;
        case 1:
            return [self.monthArray objectAtIndex:row];
            break;
        case 2:
            return [self.dayArray objectAtIndex:row];
        default:
            return nil;
            break;
    }
}

- (void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component {
    switch (component) {
        case 0:
            [pickerView reloadComponent:2];
            break;
        case 1:
            [pickerView reloadComponent:2];
            break;
        case 2:
            break;
        default:
            break;
    }
}


#pragma mark - UITextfield delegate
- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [textField resignFirstResponder];
    return YES;
}

- (IBAction)skillbtn:(UIButton *)sender {
    ghunterModifySkillViewController *skill = [ghunterModifySkillViewController new];
    [self.navigationController pushViewController:skill animated:YES];
}

- (IBAction)zhiye:(UIButton *)sender {
    ghunterOccupationViewController *ghunter = [ghunterOccupationViewController new];
    [self.navigationController pushViewController:ghunter animated:YES];
}

@end
