//
//  ghunterUserEvaluationViewController.m
//  ghunter
//
//  Created by chensonglu on 14-8-22.
//  Copyright (c) 2014年 ghunter. All rights reserved.
//我的评价(未知)

#import "ghunterUserEvaluationViewController.h"

@interface ghunterUserEvaluationViewController ()

@end

@implementation ghunterUserEvaluationViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    page = 1;
    user = [[NSMutableDictionary alloc] init];
    evaluations = [[NSMutableArray alloc] init];
    self.table = [[PullTableView alloc]initWithFrame:CGRectMake(0, 64, mainScreenWidth, mainScreenheight - 44 - 20) style:UITableViewStylePlain];
    self.table.dataSource = self;
    self.table.delegate = self;
    self.table.pullDelegate = self;
    self.table.showsVerticalScrollIndicator = NO;
    self.table.separatorStyle = UITableViewCellSeparatorStyleNone;
    self.table.backgroundColor = [UIColor clearColor];
    [self.view addSubview:self.table];
    
    if ( !self.uid ) {
        self.uid = [ghunterRequester getUserInfo:UID];
    }
    if ( [self.type isEqualToString:@"1"] ) {
        [self.titleLabel setText:@"赏金评价"];
    }else{
        [self.titleLabel setText:@"猎人评价"];
    }
    
    [ghunterRequester getwithDelegate:self withUrl:URL_GET_USER_OWN_EVALUATIONS withUserInfo:REQUEST_FOR_GET_USER_OWN_EVALUATIONS withString:[NSString stringWithFormat:@"?api_session_id=%@&uid=%@&page=%zd&type=%@",[ghunterRequester getUserInfo:API_SESSION_ID],self.uid,page,self.type]];
}

- (void)viewWillAppear:(BOOL)animated {
    self.tabBarController.tabBar.hidden = YES;
    self.navigationController.navigationBarHidden = YES;
//    self.navigationController.navigationBar.alpha = 0;
    [self.navigationController.view sendSubviewToBack:self.navigationController.navigationBar];
    [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleLightContent animated:YES];
    [[UIApplication sharedApplication] setStatusBarHidden:NO withAnimation:UIStatusBarAnimationFade];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - UITableViewDataSource

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    if([evaluations count] == 0) return 0;
    else return [evaluations count];
}

-(void)taskBgTap:(UITapGestureRecognizer *)sender{
    NSDictionary *evaluation = [evaluations objectAtIndex:sender.view.tag];
    ghuntertaskViewController *task = [[ghuntertaskViewController alloc] init];
    task.tid = [evaluation objectForKey:@"tid"];
    task.callBackBlock = ^{};
    [self.navigationController pushViewController:task animated:YES];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    static NSString *CellIdentifier = @"Cell";
    UITableViewCell *cell = (UITableViewCell *)[tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier];
    }
    NSDictionary *evaluation = [evaluations objectAtIndex:indexPath.row];
    NSArray *nibs = [[NSBundle mainBundle] loadNibNamed:@"showCommentView" owner:self options:nil];
    cell = [nibs objectAtIndex:0];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    cell.backgroundColor = [UIColor clearColor];
    
    // 点击任务的背景，调整到任务详情页
//    UIView *taskBgView = (UIView *)[cell viewWithTag:19];
//    taskBgView.tag = indexPath.row;
//    taskBgView.userInteractionEnabled = YES;
//    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(taskBgTap:)];
//    [taskBgView addGestureRecognizer:tap];
    
    UILabel *titleLabel = (UILabel *)[cell viewWithTag:1];
    OHAttributedLabel *bounty = (OHAttributedLabel *)[cell viewWithTag:2];
    UILabel *dateline = (UILabel *)[cell viewWithTag:3];
    UIImageView *owner_icon = (UIImageView *)[cell viewWithTag:4];
    UILabel *owner_content = (UILabel *)[cell viewWithTag:5];
    UIImageView *owner_back = (UIImageView *)[cell viewWithTag:6];
    UILabel *hunter_content = (UILabel *)[cell viewWithTag:7];
    UIImageView *hunter_back  =(UIImageView *)[cell viewWithTag:8];
    UIImageView *hunter_icon = (UIImageView *)[cell viewWithTag:9];
    UIView *bg = (UIView *)[cell viewWithTag:10];
    UIImageView *point = (UIImageView *)[cell viewWithTag:11];
    UIImageView * shangImgV = (UIImageView *)[cell viewWithTag:13];
    [titleLabel setText:[evaluation objectForKey:@"title"]];
    NSString *bountySelf = [evaluation objectForKey:@"bounty"];
    NSString *bountyStr = [NSString stringWithFormat:@"%@元",bountySelf];
    NSMutableAttributedString *attrStr = [NSMutableAttributedString attributedStringWithString:bountyStr];
    [attrStr setFont:[UIFont systemFontOfSize:12.0] range:NSMakeRange([bountySelf length], 1)];
    [attrStr setFont:[UIFont systemFontOfSize:12.0] range:NSMakeRange(0, [bountySelf length])];
    [attrStr setTextColor:[UIColor colorWithRed:234/255.0 green:85/234.0 blue:20/255.0 alpha:1.0]];
    [bounty setAttributedText:attrStr];
    
    CGRect bountyFrame = bounty.frame;
    bountyFrame.origin.y = shangImgV.frame.origin.y + 2;
    bounty.frame = bountyFrame;
    
    [dateline setText:[ghunterRequester getTimeDescripton:[evaluation objectForKey:@"dateline"]]];
    CGFloat space = point.frame.origin.x - owner_back.frame.origin.x;
    CGFloat base_width = 70.0;
    owner_icon.clipsToBounds = YES;
    owner_icon.layer.cornerRadius = owner_icon.frame.size.height/2.0;
    if([self.type isEqualToString:@"1"])
    {
        [owner_icon sd_setImageWithURL:[evaluation objectForKey:@"hunter_tiny_avatar"] placeholderImage:[UIImage imageNamed:@"avatar"]];
    }
    else
    {
        [owner_icon sd_setImageWithURL:[evaluation objectForKey:@"owner_tiny_avatar"] placeholderImage:[UIImage imageNamed:@"avatar"]];
    }
    CGFloat top = 20; // 顶端盖高度
    CGFloat bottom = owner_back.frame.size.height - top - 1; // 底端盖高度
    CGFloat right = 20; // 左端盖宽度
    CGFloat left = owner_back.frame.size.width - right - 1; // 右端盖宽度
    UIEdgeInsets insets = UIEdgeInsetsMake(top, left, bottom, right);
    // 指定为拉伸模式，伸缩后重新赋值
    UIImage *image = [UIImage imageNamed:@"comment_conversation_top_bg"];
    image = [image resizableImageWithCapInsets:insets resizingMode:UIImageResizingModeStretch];
    [owner_back setImage:image];
    TQStarRatingView *owner_star = [[TQStarRatingView alloc] initWithFrame:CGRectMake(owner_back.frame.origin.x + 10, owner_back.frame.origin.y + 5, 50,10) numberOfStar:5];
    [owner_star setuserInteractionEnabled:NO];
    NSString *owner_description;
    if([self.type isEqualToString:@"1"])
    {
        [owner_star setScore:[[evaluation objectForKey:@"hunter_valuation"] floatValue]];
        owner_description = [evaluation objectForKey:@"hunter_description"];
    }
    else
    {
        [owner_star setScore:[[evaluation objectForKey:@"owner_valuation"] floatValue]];
        owner_description = [evaluation objectForKey:@"owner_description"];
    }
    [bg addSubview:owner_star];
    CGSize owner_contentSize = [owner_description sizeWithFont:owner_content.font constrainedToSize:CGSizeMake(space - 20, MAXFLOAT) lineBreakMode:NSLineBreakByWordWrapping];
    CGRect owner_contentFrame = owner_content.frame;
    owner_contentFrame.size.width = owner_contentSize.width;
    owner_content.frame = owner_contentFrame;
    [owner_content setText:owner_description];
    CGRect owner_backFrame = owner_back.frame;
    if (owner_contentSize.width <= 50) {
        owner_backFrame.size.width = base_width;
    } else {
        owner_backFrame.size.width = owner_contentSize.width + 20;
    }
    owner_back.frame = owner_backFrame;
    
    hunter_icon.clipsToBounds = YES;
    hunter_icon.layer.cornerRadius = hunter_icon.frame.size.height/2.0;
    
    if([self.type isEqualToString:@"1"])
    {
        [hunter_icon sd_setImageWithURL:[evaluation objectForKey:@"owner_tiny_avatar"] placeholderImage:[UIImage imageNamed:@"avatar"]];
    }
    else
    {
        [hunter_icon sd_setImageWithURL:[evaluation objectForKey:@"hunter_tiny_avatar"] placeholderImage:[UIImage imageNamed:@"avatar"]];
    }
    UIImage *imageBottom = [UIImage imageNamed:@"comment_conversation_bottom_bg"];
    imageBottom = [imageBottom resizableImageWithCapInsets:insets resizingMode:UIImageResizingModeStretch];
    [hunter_back setImage:imageBottom];
    TQStarRatingView *hunter_star = [[TQStarRatingView alloc] initWithFrame:CGRectMake(mainScreenWidth-67-70, hunter_back.frame.origin.y + 5, 50,10) numberOfStar:5];
    [hunter_star setuserInteractionEnabled:NO];
    NSString *hunter_description;
    if([self.type isEqualToString:@"1"])
    {
        [hunter_star setScore:[[evaluation objectForKey:@"owner_valuation"] floatValue]];
        hunter_description = [evaluation objectForKey:@"owner_description"];
    }
    else
    {
        [hunter_star setScore:[[evaluation objectForKey:@"hunter_valuation"] floatValue]];
        hunter_description = [evaluation objectForKey:@"hunter_description"];
    }
    [bg addSubview:hunter_star];

    CGSize hunter_contentSize = [hunter_description sizeWithFont:hunter_content.font constrainedToSize:CGSizeMake(space - 20, MAXFLOAT) lineBreakMode:NSLineBreakByWordWrapping];
    CGRect hunter_contentFrame = hunter_content.frame;
    hunter_contentFrame.origin.x = point.frame.origin.x - 10 - hunter_contentSize.width;
    hunter_contentFrame.size.width = hunter_contentSize.width;
    hunter_content.frame = hunter_contentFrame;
    
    [hunter_content setText:hunter_description];
    CGRect hunter_backFrame = hunter_back.frame;
    if (hunter_contentSize.width <= 50) {
        hunter_backFrame.origin.x = point.frame.origin.x - base_width;
        hunter_backFrame.size.width = base_width;
    } else {
        hunter_backFrame.size.width = hunter_contentSize.width + 20;
        hunter_backFrame.origin.x = point.frame.origin.x - hunter_backFrame.size.width;
    }
    hunter_back.frame = hunter_backFrame;
    return cell;
}

#pragma mark - UITaleview delegate
// 点击查看评价
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    NSDictionary *dic = [evaluations objectAtIndex:indexPath.row];
    ghunterCheckEvaluationViewController *evaView = [[ghunterCheckEvaluationViewController alloc] init];
    evaView.tid = [dic objectForKey:@"tid"];
    [self.navigationController pushViewController:evaView animated:YES];
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    UITableViewCell *cell = [self tableView:tableView cellForRowAtIndexPath:indexPath];
    return cell.frame.size.height;
}

#pragma mark - ASIHttpRequest

-(void)requestFinished:(ASIHTTPRequest *)request
{
    int responseCode=[request responseStatusCode];
    NSError *error;
    NSData *responseData = [request responseData];
    NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseData options:NSJSONReadingMutableLeaves error:&error];
    NSString *error_number = [dic objectForKey:ERROR];
    if ([[request.userInfo objectForKey:REQUEST_TYPE] isEqual: REQUEST_FOR_GET_USER_OWN_EVALUATIONS]){
        if(responseCode==200 && [error_number integerValue] == 0)
        {
            user = [dic objectForKey:@"user"];
            [evaluations removeAllObjects];
            page = 2;
            NSArray *array = [dic valueForKey:@"valuations"];
            [evaluations addObjectsFromArray:array];
            [self.table reloadData];
        }else if([dic objectForKey:@"msg"]){
            [ghunterRequester wrongMsg:[dic objectForKey:@"msg"]];
        }else{
            [ghunterRequester noMsg];
        }
    }else if ([[request.userInfo objectForKey:REQUEST_TYPE] isEqual: REQUEST_FOR_LOADMORE_USER_OWN_EVALUATIONS]){
        if(responseCode==200 && [error_number integerValue] == 0)
        {
            page++;
            NSArray *array = [dic valueForKey:@"valuations"];
            [evaluations addObjectsFromArray:array];
            [self.table reloadData];
        }else if([dic objectForKey:@"msg"]){
            [ghunterRequester wrongMsg:[dic objectForKey:@"msg"]];
        }else{
            [ghunterRequester noMsg];
        }
        self.table.pullTableIsLoadingMore = NO;
    }
}

-(void)requestFailed:(ASIHTTPRequest *)request
{
    self.table.pullTableIsLoadingMore = NO;
    [ghunterRequester performSelectorOnMainThread:@selector(showTip:) withObject:@"网络连接异常" waitUntilDone:false];
}

#pragma mark - PullTableViewDelegate

- (void)pullTableViewDidTriggerRefresh:(PullTableView *)pullTableView
{
    [self performSelector:@selector(refreshTable) withObject:nil afterDelay:0.1f];
}

- (void)pullTableViewDidTriggerLoadMore:(PullTableView *)pullTableView
{
    [self performSelector:@selector(loadMoreDataToTable) withObject:nil afterDelay:0.1f];
}

#pragma mark - Refresh and load more methods

- (void)refreshTable
{
    page = 1;
    [ghunterRequester getwithDelegate:self withUrl:URL_GET_USER_OWN_EVALUATIONS withUserInfo:REQUEST_FOR_GET_USER_OWN_EVALUATIONS withString:[NSString stringWithFormat:@"?api_session_id=%@&uid=%@&page=%zd&type=%@",[ghunterRequester getUserInfo:API_SESSION_ID],[ghunterRequester getUserInfo:UID],page,self.type]];
    self.table.pullTableIsRefreshing = NO;
}

- (void)loadMoreDataToTable
{
    [ghunterRequester getwithDelegate:self withUrl:URL_GET_USER_OWN_EVALUATIONS withUserInfo:REQUEST_FOR_LOADMORE_USER_OWN_EVALUATIONS withString:[NSString stringWithFormat:@"?api_session_id=%@&uid=%@&page=%zd&type=%@",[ghunterRequester getUserInfo:API_SESSION_ID],[ghunterRequester getUserInfo:UID],page,self.type]];
}

- (IBAction)back:(id)sender {
    [self.navigationController popViewControllerAnimated:YES];
}



@end
